#ifndef EEPROMHANDLER_H
#define EEPROMHANDLER_H

#include <Arduino.h>
#include <EEPROM.h>

// üîß –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤ EEPROM
struct EEPROMConfig {
  char ssid[32];        // SSID Wi-Fi —Å–µ—Ç–∏
  char password[64];    // –ü–∞—Ä–æ–ª—å Wi-Fi —Å–µ—Ç–∏
  char ssidAP[32];      // SSID —Ç–æ—á–∫–∏ –¥–æ—Å—Ç—É–ø–∞
  char passwordAP[64];  // –ü–∞—Ä–æ–ª—å —Ç–æ—á–∫–∏ –¥–æ—Å—Ç—É–ø–∞
  char lastColor[16];   // –ü–æ—Å–ª–µ–¥–Ω–∏–π —Ü–≤–µ—Ç
  bool connected;       // –§–ª–∞–≥ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
  uint16_t bootCount;   // –°—á—ë—Ç—á–∏–∫ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–æ–∫
  uint8_t brightness;   // –Ø—Ä–∫–æ—Å—Ç—å (0‚Äì255)
};

class EEPROMHandler {
 public:
  static void begin();
  static void loadConfig(EEPROMConfig& config);
  static bool saveConfig(const EEPROMConfig& config);
  static void printConfig(const EEPROMConfig& config);

  // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã
  static EEPROMConfig getDefaultConfig();

 private:
  static const uint32_t EEPROM_SIZE = 512;
  static const uint32_t CONFIG_ADDRESS = 0;
  static const uint8_t CONFIG_VERSION = 0x01;
};

#endif  // EEPROMHANDLER_H